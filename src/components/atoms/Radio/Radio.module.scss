@use "../../../styles/_tokens.scss" as *;

.radio {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
  cursor: pointer;
  user-select: none;
  font-family: var(--font-family);
  transition: var(--motion-transition-fast);

  &.checked {
    border-color: var(--color-primary);
    background-color: var(--color-primary);

    &::after {
      content: "";
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: calc(var(--spacing-xs) * 1.5);
      height: calc(var(--spacing-xs) * 1.5);
      background-color: var(--color-surface);
      border-radius: 50%;
    }
  }

  &.variant-default {
    background-color: transparent;

    &:hover:not(.disabled) {
      border-color: var(--color-primary);
      background-color: var(--color-surface-secondary);
    }

    &:focus-visible {
      border-color: var(--color-primary);
      background-color: var(--color-surface-secondary);
    }
  }

  &.variant-outline {
    border: var(--border-width-normal) solid var(--color-border-secondary);
    background-color: transparent;

    &:hover:not(.disabled) {
      border-color: var(--color-primary);
      background-color: var(--color-surface-secondary);
    }

    &:focus-visible {
      border-color: var(--color-primary);
      background-color: var(--color-surface-secondary);
    }
  }

  &.variant-filled {
    border-color: var(--color-border-secondary);
    background-color: var(--color-surface-secondary);

    &:hover:not(.disabled) {
      border-color: var(--color-primary);
      background-color: var(--color-surface-tertiary);
    }

    &:focus-visible {
      border-color: var(--color-primary);
      background-color: var(--color-surface-tertiary);
    }
  }

  &.variant-light {
    color: var(--color-text-primary);
    border-color: var(--color-border-secondary);
    background-color: var(--color-surface-secondary);

    &:hover:not(.disabled) {
      border-color: var(--color-primary);
      background-color: var(--color-surface-tertiary);
    }

    &:focus-visible {
      border-color: var(--color-primary);
      background-color: var(--color-surface-tertiary);
    }
  }

  &:focus-visible {
    outline: var(--border-width-normal) solid var(--color-border-focus);
    outline-offset: var(--spacing-xs);
  }

  &.state-error:hover:not(.state-disabled) {
    .radioButton {
      border-color: var(--color-red-7);
    }
  }

  &:focus-within {
    .radioButton {
      border-color: var(--color-blue-6);
      box-shadow: 0 0 0 var(--border-width-normal) var(--color-blue-1);
    }
  }

  &.state-error:focus-within {
    .radioButton {
      border-color: var(--color-red-6);
      box-shadow: 0 0 0 var(--border-width-normal) var(--color-red-1);
    }
  }

  &.labelLeft {
    flex-direction: row-reverse;
    gap: var(--spacing-xs);
  }
}

.input {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
  margin: 0;
  padding: 0;
  pointer-events: none;
}

.radioButton {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
  border: var(--border-width-normal) solid var(--color-border-secondary);
  border-radius: 50%;
  background-color: var(--color-surface);
  transition: var(--motion-transition-fast);
  flex-shrink: 0;

  .input:checked + & {
    border-color: var(--color-primary);
    background-color: var(--color-primary);

    .radioDot {
      opacity: 1;
      transform: scale(1);
    }
  }

  .state-error .input:checked + & {
    border-color: var(--color-error) !important;
    background-color: var(--color-error) !important;
  }

  .input:disabled + & {
    border-color: var(--color-border-secondary);
    background-color: var(--color-surface-secondary);
    cursor: not-allowed;
  }
}

.radioDot {
  width: 50%;
  height: 50%;
  border-radius: 50%;
  background-color: var(--color-surface);
  opacity: 0;
  transform: scale(0);
  transition: var(--motion-transition-fast);
}

.label {
  font-size: inherit;
  line-height: inherit;
  color: var(--color-text-primary);
  cursor: pointer;

  .state-disabled & {
    color: var(--color-text-muted);
    cursor: not-allowed;
  }

  .state-error & {
    color: var(--color-error);
  }
}

// Size variants
.size-xs {
  font-size: var(--font-size-xs);
  line-height: var(--line-height-xs);

  .radioButton {
    width: var(--icon-size-xs);
    height: var(--icon-size-xs);
  }
}

.size-sm {
  font-size: var(--font-size-sm);
  line-height: var(--line-height-sm);

  .radioButton {
    width: var(--icon-size-sm);
    height: var(--icon-size-sm);
  }
}

.size-md {
  font-size: var(--font-size-md);
  line-height: var(--line-height-md);

  .radioButton {
    width: var(--icon-size-md);
    height: var(--icon-size-md);
  }
}

.size-lg {
  font-size: var(--font-size-lg);
  line-height: var(--line-height-lg);

  .radioButton {
    width: var(--icon-size-lg);
    height: var(--icon-size-lg);
  }
}

.size-xl {
  font-size: var(--font-size-xl);
  line-height: var(--line-height-xl);

  .radioButton {
    width: var(--icon-size-xl);
    height: var(--icon-size-xl);
  }
}

// State variants
.state-default {
  // Default state styles are handled above
}

.state-disabled {
  cursor: not-allowed;
  opacity: var(--opacity-50);

  &:hover {
    .radioButton {
      border-color: var(--color-gray-3);
    }
  }
}

.state-error {
  .radioButton {
    border-color: var(--color-red-6);

    .input:checked + & {
      border-color: var(--color-red-6) !important;
      background-color: var(--color-red-6) !important;
    }
  }

  &:hover:not(.state-disabled) {
    .radioButton {
      border-color: var(--color-red-7);
    }
  }

  &:focus-within {
    .radioButton {
      border-color: var(--color-red-6);
      box-shadow: 0 0 0 var(--border-width-normal) var(--color-red-1);
    }
  }
}
