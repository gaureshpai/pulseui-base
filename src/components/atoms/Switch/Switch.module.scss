@use "../../../styles/_tokens.scss" as *;

.switchContainer {
  display: flex;
  flex-direction: column;
  gap: var(--spacing-xs);
}

.switchLabelGroup {
  display: flex;
  align-items: center;
  gap: var(--spacing-sm);
}

.switchInput {
  position: absolute;
  opacity: 0;
  width: 0;
  height: 0;
  margin: 0;
  padding: 0;
  pointer-events: none;
}

.switch {
  position: relative;
  display: flex;
  align-items: center;
  cursor: pointer;
  transition: var(--motion-transition-fast);

  &:hover:not(.disabled) {
    .switchTrack {
      border-color: var(--color-border-primary);
    }
  }

  &.checked {
    .switchTrack {
      background-color: var(--color-primary);
      border-color: var(--color-primary);
    }

    .switchThumb {
      transform: translateX(var(--switch-thumb-translate-md));
    }
  }

  &.disabled {
    cursor: not-allowed;
    opacity: var(--opacity-50);

    .switchTrack {
      background-color: var(--color-surface-tertiary);
      border-color: var(--color-border-secondary);
    }

    .switchThumb {
      background-color: var(--color-surface-secondary);
    }
  }

  &.error {
    .switchTrack {
      border-color: var(--color-error);
    }

    &.checked .switchTrack {
      background-color: var(--color-error);
      border-color: var(--color-error);
    }
  }
}

.switchTrack {
  position: relative;
  width: var(--switch-track-width-md);
  height: var(--switch-track-height-md);
  background-color: var(--color-surface-0);
  border: var(--border-width-thin) solid var(--color-border-secondary);
  border-radius: calc(var(--switch-track-height-md) / 2);
  transition: var(--motion-transition-fast);
}

.switchThumb {
  position: absolute;
  top: var(--switch-thumb-offset-md);
  left: var(--switch-thumb-offset-md);
  width: var(--switch-thumb-size-md);
  height: var(--switch-thumb-size-md);
  background-color: var(--color-surface-2);
  border-radius: 50%;
  transition: var(--motion-transition-fast);
  box-shadow: var(--shadow-sm);
}

.label {
  font-size: inherit;
  line-height: inherit;
  color: var(--color-on-surface);
  cursor: pointer;
  user-select: none;

  &.disabled {
    color: var(--color-text-muted);
    cursor: not-allowed;
  }
}

.required {
  color: var(--color-error);
  margin-left: var(--spacing-xs);
}

.errorMessage {
  font-size: inherit;
  color: var(--color-icon-error);
  margin-top: var(--spacing-xs);
}

// Size variants
.size-sm {
  .switchTrack {
    width: var(--switch-track-width-sm);
    height: var(--switch-track-height-sm);
    border-radius: calc(var(--switch-track-height-sm) / 2);
  }

  .switchThumb {
    top: var(--switch-thumb-offset-sm);
    left: var(--switch-thumb-offset-sm);
    width: var(--switch-thumb-size-sm);
    height: var(--switch-thumb-size-sm);
  }

  &.checked .switchThumb {
    transform: translateX(var(--switch-thumb-translate-sm));
  }

  .label {
    font-size: var(--font-size-sm);
    line-height: var(--line-height-sm);
  }

  .errorMessage {
    font-size: var(--font-size-xs);
    line-height: var(--line-height-xs);
  }
}

.size-md {
  .switchTrack {
    width: var(--switch-track-width-md);
    height: var(--switch-track-height-md);
    border-radius: calc(var(--switch-track-height-md) / 2);
  }

  .switchThumb {
    top: var(--switch-thumb-offset-md);
    left: var(--switch-thumb-offset-md);
    width: var(--switch-thumb-size-md);
    height: var(--switch-thumb-size-md);
  }

  &.checked .switchThumb {
    transform: translateX(var(--switch-thumb-translate-md));
  }

  .label {
    font-size: var(--font-size-md);
    line-height: var(--line-height-md);
  }

  .errorMessage {
    font-size: var(--font-size-sm);
    line-height: var(--line-height-sm);
  }
}

.size-lg {
  .switchTrack {
    width: var(--switch-track-width-lg);
    height: var(--switch-track-height-lg);
    border-radius: calc(var(--switch-track-height-lg) / 2);
  }

  .switchThumb {
    top: var(--switch-thumb-offset-lg);
    left: var(--switch-thumb-offset-lg);
    width: var(--switch-thumb-size-lg);
    height: var(--switch-thumb-size-lg);
  }

  &.checked .switchThumb {
    transform: translateX(var(--switch-thumb-translate-lg));
  }

  .label {
    font-size: var(--font-size-lg);
    line-height: var(--line-height-lg);
  }

  .errorMessage {
    font-size: var(--font-size-md);
    line-height: var(--line-height-md);
  }
}

// Responsive design
@media (max-width: var(--breakpoint-sm)) {
  .switchLabelGroup {
    gap: var(--spacing-xs);
  }

  .label {
    font-size: var(--font-size-sm);
  }
}
